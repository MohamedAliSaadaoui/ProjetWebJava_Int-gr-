security:
    # Password hashers configuration
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    
    # Providers configuration to load users from the database
    providers:
        users_database:
            entity:
                class: App\Entity\User
                property: email  # Utilise l'email comme identifiant
    
    firewalls:
        # Configuration pour l'environnement de développement (profiler, WDT, etc.)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # Configuration principale pour l'application
        main:
            lazy: true
            provider: users_database  # Utilise le provider pour charger les utilisateurs depuis la base de données
            
            # Configuration de l'authentification par formulaire
            form_login:
                login_path: app_login  # Nom de la route pour la page de connexion
                check_path: app_login  # Nom de la route pour le traitement du formulaire de connexion
                default_target_path: app_category  # Redirection après connexion réussie
                username_parameter: _username  # Vérifie que le champ du formulaire est bien nommé "_username"
                password_parameter: password  # Vérifie que le champ du formulaire est bien nommé "password"
            
            # Configuration de l'authentification OAuth Google
            custom_authenticator: App\Security\GoogleAuthenticator
            entry_point: App\Security\GoogleAuthenticator
            
            # Configuration de la déconnexion
            logout:
                path: app_logout
                target: app_login # Redirige vers la page de login après déconnexion
                invalidate_session: true
    
    # Access control rules
    access_control:
        # Routes publiques
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/connect, roles: PUBLIC_ACCESS }
        
        # Routes protégées
        - { path: ^/admin, roles: ROLE_ADMIN }  # Accès réservé aux administrateurs
        - { path: ^/profile, roles: ROLE_USER }  # Accès réservé aux utilisateurs connectés
        - { path: ^/user, roles: IS_AUTHENTICATED_FULLY }  # Assure-toi que l'utilisateur doit être connecté pour accéder à son profil
        
        # Autres routes
        - { path: ^/logout, roles: IS_AUTHENTICATED_REMEMBERED }  # Permet l'accès à la route de déconnexion pour tous les utilisateurs authentifiés
        - { path: ^/user/new, roles: PUBLIC_ACCESS }  # Permet l'inscription publique